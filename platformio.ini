;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = UCD2-r5_4-dev

; This are just the build flags as set by the runtime.
[flags:runtime]
build_flags =
    -Wno-unused-but-set-variable
    -Wno-sign-compare

; This are just the build flags for clang-tidy.
[flags:clangtidy]
build_flags =
    -Wall
    -Wextra
    -Wunreachable-code
    -Wfor-loop-analysis
    -Wshadow-field
    -Wshadow-field-in-constructor
    -Wshadow-uncaptured-local

; This are common settings for all environments.
[common:esp32-arduino]
platform = espressif32 @ 6.3.2
platform_packages =
    platformio/framework-arduinoespressif32 @ ~3.20009.0
board = esp32dev
framework = arduino

upload_port = /dev/cu.usbserial-A50285BI
monitor_port = /dev/cu.usbserial-A50285BI
monitor_speed = 115200

extra_scripts = 
  pre:build_firmware_version.py
  pre:build_set_hw_revision.py
  post:sign_firmware.py

; Library dependencies
lib_deps =
  ArduinoJson @ 6.21.2
  WebSockets @ 2.4.1
  arcao/Syslog@^2.0.0
  IRremoteESP8266=git+https://github.com/zehnm/IRremoteESP8266.git#v2.8.5-ucd2.1

board_build.partitions = min_spiffs.csv

build_flags =
  ${flags:runtime.build_flags}
  -DCORE_DEBUG_LEVEL=4  ; uncomment for SDK debug logging
  -DDECODE_AMCOR=false
  -DDECODE_ARGO=false
  -DDECODE_BOSCH144=false
  -DDECODE_CARRIER_AC=false
  -DDECODE_CARRIER_AC128=false
  -DDECODE_CARRIER_AC40=false
  -DDECODE_CARRIER_AC64=false
  -DDECODE_CARRIER_AC84=false
  -DDECODE_CLIMABUTLER=false
  -DDECODE_CORONA_AC=false
  -DDECODE_DAIKIN=false
  -DDECODE_DAIKIN128=false
  -DDECODE_DAIKIN152=false
  -DDECODE_DAIKIN160=false
  -DDECODE_DAIKIN176=false
  -DDECODE_DAIKIN2=false
  -DDECODE_DAIKIN200=false
  -DDECODE_DAIKIN216=false
  -DDECODE_DAIKIN312=false
  -DDECODE_DAIKIN64=false
  -DDECODE_DELONGHI_AC=false
  -DDECODE_ELECTRA_AC=false
  -DDECODE_FUJITSU_AC=false
  -DDECODE_GREE=false
  -DDECODE_HAIER_AC_YRW02=false
  -DDECODE_HAIER_AC=false
  -DDECODE_HAIER_AC160=false
  -DDECODE_HAIER_AC176=false
  -DDECODE_HITACHI_AC=false
  -DDECODE_HITACHI_AC1=false
  -DDECODE_HITACHI_AC2=false
  -DDECODE_HITACHI_AC264=false
  -DDECODE_HITACHI_AC296=false
  -DDECODE_HITACHI_AC3=false
  -DDECODE_HITACHI_AC344=false
  -DDECODE_HITACHI_AC424=false
  -DDECODE_KELON=false
  -DDECODE_KELON168=false
  -DDECODE_KELVINATOR=false
  -DDECODE_MIRAGE=false
  -DDECODE_MITSUBISHI_AC=false
  -DDECODE_MITSUBISHI112=false
  -DDECODE_MITSUBISHI136=false
  -DDECODE_MITSUBISHIHEAVY=false
  -DDECODE_MWM=false
  -DDECODE_NEOCLIMA=false
  -DDECODE_PANASONIC_AC=false
  -DDECODE_PANASONIC_AC32=false
  -DDECODE_RHOSS=false
  -DDECODE_SAMSUNG_AC=false
  -DDECODE_SANYO_AC=false
  -DDECODE_SANYO_AC152=false
  -DDECODE_SANYO_AC88=false
  -DDECODE_SHARP_AC=false
  -DDECODE_TCL112AC=false
  -DDECODE_TCL96AC=false
  -DDECODE_TECHNIBEL_AC=false
  -DDECODE_TEKNOPOINT=false
  -DDECODE_TOSHIBA_AC=false
  -DDECODE_TROTEC_3550=false
  -DDECODE_TROTEC=false
  -DDECODE_VESTEL_AC=false
  -DDECODE_VOLTAS=false
  -DDECODE_WHIRLPOOL_AC=false
  -DDECODE_YORK=false

board_build.embed_txtfiles =
  ota_public_key.pem ; public key chain in PEM format for OTA image verification. Requires TEXT to append 0 byte expected for PEM parsing
  resources/status_header.html
  resources/status_footer.html

check_tool = clangtidy

monitor_filters =
  default                  ; Remove typical terminal control codes from input
  esp32_exception_decoder

test_ignore = test_native*

# ---------------------------------------------------------------------------------------------------------------------
# Local development build without building a signed OTA image
[env:UCD2-r5_4-dev]
extends = common:esp32-arduino

build_flags = 
  ${common:esp32-arduino.build_flags}
  -D HW_REVISION=5.4  ; Python build actions: build_set_hw_revision.py & sign_firmware.py
  -D HW_MODEL=UCD2
  -D SKIP_SIGNING=true

# ---------------------------------------------------------------------------------------------------------------------
# Used by GitHub action build: sign firmare image with release certificate for OTA update
[env:UCD2-r5_4-GitHub]
extends = common:esp32-arduino

build_flags = 
  ${common:esp32-arduino.build_flags}
  -D HW_REVISION=5.4  ; Python build actions: build_set_hw_revision.py & sign_firmware.py
  -D HW_MODEL=UCD2
  -D SIGNING_KEY_FILE=secret-signing-key.pem ; set by the GitHub build action from a GH secret

# ---------------------------------------------------------------------------------------------------------------------
# Note: other hardware revisions & CI build configurations omitted
# ---------------------------------------------------------------------------------------------------------------------

# native unit tests

[env:unit-tests]
platform = native
build_flags = -std=gnu++11
lib_deps =
    ArduinoFake
